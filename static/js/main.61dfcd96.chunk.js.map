{"version":3,"sources":["Components/ProductCard/ProductCard.js","Components/ProductCard/index.js","Components/Catalog/index.js","Components/Catalog/Catalog.js","mockCatalog.js","App.js","index.js"],"names":["ProductCard","cardData","cardId","onClick","selected","name","subname","quantity","description","total","properties","image","image2x","useState","isMouseOver","setMouseOver","clickHandler","id","cardClasses","cn","className","onMouseLeave","split","map","el","key","renderPropertyItems","retinaImage2x","src","alt","srcSet","renderImage","type","defaultProps","Catalog","data","selectedCards","setSelectedCards","onClickHandler","index","findIndex","head","slice","tail","Object","keys","isSelected","includes","App","mockData","reduce","acc","elem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61dfcd96.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport './ProductCard.scss'\n\nconst ProductCard = ({ cardData, cardId, onClick, selected }) => {\n  \n  const { \n    name, subname, quantity, description,\n    total, properties, image, image2x,\n  } = cardData  \n  \n  const [ isMouseOver, setMouseOver ] = useState(false)\n  \n  const clickHandler = (id) => {\n    if (!quantity) return    \n    setMouseOver(true)\n    return onClick(id)\n  }\n\n  const mouseLeaveHandler = () => {\n    if (isMouseOver) setMouseOver(false)\n  }\n  \n  const renderDescription = () => {    \n    if (!quantity) {\n      return `Печалька, ${subname} закончился.`\n    }\n    \n    if (!selected) {\n      return (\n        <span>\n          {'Чего сидишь? Порадуй котэ, '}\n          <button\n            type=\"button\"\n            onClick={() => clickHandler(cardId)}\n            className=\"product-card__buy-link\">\n            купи.\n          </button>\n        </span>\n      )\n    }\n\n    return description\n  }\n\n  const renderPropertyItems = () => {\n    if (!properties) return\n    return properties.split(',').map(el => (\n      <li key={el}>{el}</li>\n    ))\n  }\n\n  const renderImage = () => {\n    if (!image) return\n    const retinaImage2x = image2x ? `${image2x} 2x` : null\n    return (\n      <img\n        src={image}\n        alt={`${name} ${subname}`}\n        className=\"product-card__image\"\n        srcSet={retinaImage2x}\n      />\n    \n    )\n  }\n\n  const cardClasses = cn(\n    'product-card',\n    { 'product-card--disabled': !quantity },\n    { 'product-card--selected': selected },\n    { 'product-card--mouseover': isMouseOver },\n  )\n\n  return (\n    <div className={cardClasses}>\n      <div\n        className=\"product-card__inner\"\n        onClick={() => clickHandler(cardId)}\n        onMouseLeave={() => mouseLeaveHandler()}>\n        <div className=\"product-card__content\">\n          <h2 className=\"product-card__name\">{name}</h2>\n          <h3 className=\"product-card__subname\">{subname}</h3>\n          <ul className=\"product-card__properties\">\n            {renderPropertyItems()}\n          </ul>\n          <div className=\"product-card__total\">\n            {total}<span>КГ</span>\n          </div>\n          {renderImage()}\n        </div>\n      </div>\n      <p className=\"product-card__description\">\n        {renderDescription()}\n      </p>\n    </div>\n  )\n}\n\nProductCard.propTypes = {\n  cardData: PropTypes.object.isRequired,\n  cardId: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool,\n}\n\nProductCard.defaultProps = {\n  selected: false,\n}\n\nexport default ProductCard\n","import ProductCard from './ProductCard'\n\nexport default ProductCard","import Catalog from './Catalog'\n\nexport default Catalog","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport ProductCard from '../ProductCard'\n\nimport './Catalog.scss'\n\nconst Catalog = ({ data }) => {\n  const [ selectedCards, setSelectedCards ] = useState([])\n  \n  const onClickHandler = (id) => {\n    const index = selectedCards.findIndex(el => el === id)\n    if (index === -1) {\n      setSelectedCards([...selectedCards, id])\n    } else {\n      const head = selectedCards.slice(0, index)\n      const tail = selectedCards.slice(index + 1)\n      setSelectedCards([...head, ...tail])\n    }\n  }\n\n  const renderCatalogItems = () => {\n    const keys = Object.keys(data)\n\n    return (\n      keys.map(id => {\n        const isSelected = selectedCards.includes(id);\n        \n        return (\n          <li key={id} className=\"catalog__item\">\n            <ProductCard\n              cardId={id}\n              cardData={data[id]}\n              selected={isSelected}\n              onClick={onClickHandler}\n            />\n          </li>\n        )\n      })\n    )\n  }\n\n  return (\n    <ul className=\"catalog\">\n      {renderCatalogItems()}\n    </ul>\n  )\n}\n\nCatalog.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport default Catalog\n","export default [\n  {\n    id: '1',\n    name: 'Нямушка',\n    subname: 'с фуа-гра',\n    quantity: '2',\n    description: 'Печень утки разварная с артишоками.',\n    total: '0,5',\n    properties: '10 порций, мышь в подарок',\n    image: '/uploads/cat.png',\n    image2x: '/uploads/cat@2x.png',\n  },\n  {\n    id: '2',\n    name: 'Нямушка',\n    subname: 'с рыбой',\n    quantity: 78,\n    description: 'Головы щучьи с чесноком да свежайшая сёмгушка.',\n    total: '2',\n    properties: '40 порций, 2 мыши в подарок',\n    image: '/uploads/cat.png',\n    image2x: '/uploads/cat@2x.png',\n  },\n  {\n    id: '3',\n    name: 'Нямушка',\n    subname: 'с курой',\n    quantity: '',\n    description: 'Филе из цыплят с трюфелями в бульоне.',\n    total: '5',\n    properties: '100 порций, 5 мышей в подарок, заказчик доволен',\n    image: '/uploads/cat.png',\n    image2x: '/uploads/cat@2x.png',\n  },\n]\n","import React from 'react';\n\nimport Catalog from './Components/Catalog'\n\nimport mockData from './mockCatalog'\n\nimport './main.scss'\n\nconst makeAst = (data) => data.reduce((acc, elem) => {    \n  const newAcc = {\n    ...acc, \n    [elem.id]: { ...elem },\n  }\n  return newAcc;\n}, {})\n\nconst App = () => {\n  return (\n    <section className=\"container\">\n      <h1>Ты сегодня покормил кота?</h1>\n      <Catalog data={makeAst(mockData)} />\n    </section>\n  );\n}\n\nexport default App\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}